/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Frame18_StudentList extends javax.swing.JPanel {

    /**
     * Creates new form Frame18_StudentList
     */
    public Frame18_StudentList() {
        initComponents();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        if (AppOpration.getAppOpration().what_class.equals("-")) {

        } else {
            String class_id = AppOpration.getAppOpration().what_class;

            String query = "SELECT student_id FROM student_list WHERE class_id = '"
                    + class_id + "';";

            String[] infos = ConnectMySQL.getConnectMySQL().get_query(query);

            for (int j = 0; j < infos.length; j++) {
                query = "SELECT * FROM student WHERE student_id = '"
                        + infos[j] + "';";
                String[] infos_2 = ConnectMySQL.getConnectMySQL().get_query(query);
                String student_id = infos_2[0];
                String full_name = infos_2[1] + " " + infos_2[2]
                        + " " + infos_2[3];
                String date_of_birth = infos_2[5] + "/" + infos_2[6]
                        + "/" + infos_2[7];
                String gender = "Male";

                if (infos_2[4].equals("1")) {
                    gender = "Female";
                }

                query = "SELECT * FROM major WHERE major_id = '"
                        + infos_2[10] + "';";
                String[] infos_3 = ConnectMySQL.getConnectMySQL().get_query(query);

                String major = infos_3[1];

                query = "SELECT * FROM department WHERE department_id = '"
                        + infos_3[2] + "';";
                String[] infos_4 = ConnectMySQL.getConnectMySQL().get_query(query);

                String department = infos_4[1];

                model.addRow(new Object[]{student_id, full_name,
                    date_of_birth, gender, major, department});

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        SearchBar = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Full name", "Date of birth", "Gender", "Department", "Major"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("SF Pro Display", 0, 24)); // NOI18N
        jButton1.setText("Edit Score");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("SF Pro Display", 0, 24)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("SF Pro", 0, 18)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnFilter.setFont(new java.awt.Font("SF Pro", 0, 18)); // NOI18N
        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchBar)
                    .addComponent(btnFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MainUser.goBack(); // Frame10_OptionsLecturer
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        if (i != -1) {
            String student_id = String.valueOf(jTable1.getValueAt(i, 0));
            //ManageData.getManageData().setBook_choosen(id);

            AppOpration.getAppOpration().student_id_to_input_score = student_id;

            MainUser.goToScoreEdit();
        }

        //MainUser.goToScoreEdit();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String search_text = SearchBar.getText();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        if (AppOpration.getAppOpration().what_class.equals("-")) {

        } else {
            String class_id = AppOpration.getAppOpration().what_class;

            String query = "SELECT student_id FROM student_list WHERE class_id = '"
                    + class_id + "';";

            String[] infos = ConnectMySQL.getConnectMySQL().get_query(query);

            for (int j = 0; j < infos.length; j++) {
                query = "SELECT * FROM student WHERE student_id = '"
                        + infos[j] + "';";
                String[] infos_2 = ConnectMySQL.getConnectMySQL().get_query(query);
                String student_id = infos_2[0];
                String full_name = infos_2[1] + " " + infos_2[2]
                        + " " + infos_2[3];
                String date_of_birth = infos_2[5] + "/" + infos_2[6]
                        + "/" + infos_2[7];
                String gender = "Male";

                if (infos_2[4].equals("1")) {
                    gender = "Female";
                }

                query = "SELECT * FROM major WHERE major_id = '"
                        + infos_2[10] + "';";
                String[] infos_3 = ConnectMySQL.getConnectMySQL().get_query(query);

                String major = infos_3[1];

                query = "SELECT * FROM department WHERE department_id = '"
                        + infos_3[2] + "';";
                String[] infos_4 = ConnectMySQL.getConnectMySQL().get_query(query);

                String department = infos_4[1];

                if (student_id.toLowerCase().contains(search_text.toLowerCase())
                        || full_name.toLowerCase()
                                .contains(search_text.toLowerCase())) {
                    model.addRow(new Object[]{student_id, full_name,
                        date_of_birth, gender, major, department});
                }

                /*model.addRow(new Object[]{student_id, full_name,
                    date_of_birth, gender, major, department});*/
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SearchBar;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
